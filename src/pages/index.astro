---
import { z } from "astro/zod";
import Layout from "../layouts/Layout.astro";

let planetError: string[] | undefined;
let success = false;

const validator = z.object({
  planet: z.string().refine((p) => p.toLowerCase() !== "pluto", {
    message: "Pluto is not a planet!",
  }),
});

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const data = Object.fromEntries(formData.entries());
  const parsed = validator.safeParse(data);
  if (parsed.success) {
    success = true;
  } else {
    planetError = parsed.error.formErrors.fieldErrors.planet;
  }
}
---

<Layout title="Welcome to the platform">
  <main>
    <h1>Just the <span class="text-gradient">platform</span></h1>
    {success ? <p class="success">Success!</p> : null}

    <form method="POST" transition:name="form">
      <label for="planet">Favorite planet</label>
      <input transition:persist type="text" name="planet" />

      {planetError?.map((e) => <p class="error">{e}</p>)}

      <button type="submit">Submit</button>
    </form>
  </main>
</Layout>

<style>
  form {
    display: flex;
    flex-direction: column;
    gap: theme(gap.2);
    margin-block-start: theme(gap.2);
  }

  .success {
    background-color: theme(backgroundColor.green.200);
    color: theme(textColor.green.950);
    padding: theme(padding.1) theme(padding.2);
    border-radius: theme(borderRadius.DEFAULT);
    font-size: theme(fontSize.sm);
  }

  .error {
    background-color: theme(backgroundColor.red.200);
    color: theme(textColor.red.950);
    padding: theme(padding.1) theme(padding.2);
    border-radius: theme(borderRadius.DEFAULT);
    font-size: theme(fontSize.sm);
  }

  button {
    padding-inline: 1rem;
    padding-block: 0.5rem;
    background: rgba(var(--accent), 100%);
    border-radius: 0.2rem;
  }

  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
</style>
